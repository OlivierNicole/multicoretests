(library
 (name util)
 (modules util)
 (libraries qcheck unix))

(library
 (name STM)
 (modules STM)
 (libraries qcheck domainslib))

(library
 (name lin)
 (modules lin)
 (libraries qcheck domainslib))


;; platform independent helper to help validate non-deterministic output

(executable
 (name check_error_count)
 (modules check_error_count))


;; tests to confirm that approach works

;;(executable
;; (name ref_test)
;; (modules ref_test)
;; (libraries util qcheck STM)
;; (preprocess (pps ppx_deriving.show)))
;;
;;(rule
;; (alias runtest)
;; (deps ref_test.exe check_error_count.exe)
;; (action
;;   (progn
;;    (with-accepted-exit-codes 1
;;      (with-stdout-to "ref-output.txt" (run ./ref_test.exe --no-colors --verbose)))
;;    (cat ref-output.txt)
;;    (run ./check_error_count.exe "ref_test" 2 ref-output.txt))))
;;
;;(library
;; (name CList)
;; (modules CList))
;;
;;(executable
;; (name conclist_test)
;; (modules conclist_test)
;; (libraries util CList qcheck STM)
;; (preprocess (pps ppx_deriving.show)))
;;
;;(rule
;; (alias runtest)
;; (deps conclist_test.exe check_error_count.exe)
;; (action
;;   (progn
;;    (with-accepted-exit-codes 1
;;      (with-stdout-to "cl-output.txt" (run ./conclist_test.exe --no-colors --verbose)))
;;    (cat cl-output.txt)
;;    (run ./check_error_count.exe "conclist_test" 1 cl-output.txt))))
;;
;;
;;;; actual multicore STM tests
;;
;;(executable
;; (name atomic_test)
;; (modules atomic_test)
;; (libraries util qcheck STM)
;; (preprocess (pps ppx_deriving.show)))
;;
;;(rule
;; (alias runtest)
;; (deps atomic_test.exe check_error_count.exe)
;; (action
;;   (progn
;;    (with-stdout-to "atom-output.txt" (run ./atomic_test.exe --no-colors --verbose))
;;    (cat atom-output.txt)
;;    (run ./check_error_count.exe "atomic_test" 0 atom-output.txt))))
;;
;;
;;(executable
;; (name ws_deque_test)
;; (modules ws_deque_test)
;; (libraries util qcheck STM domainslib)
;; (preprocess (pps ppx_deriving.show)))
;;
;;(rule
;; (alias runtest)
;; (deps ws_deque_test.exe check_error_count.exe)
;; (action
;;   (progn
;;    (with-accepted-exit-codes 1
;;      (with-stdout-to "wsd-output.txt" (run ./ws_deque_test.exe --no-colors --verbose)))
;;    (cat wsd-output.txt)
;;    (run ./check_error_count.exe "ws_deque_test" 1 wsd-output.txt))))
;;
;;
;;;; other multicore tests of Domain/Domainslib.Task's spawn/async functionality (non-STM)
;;
;;(executable
;; (name domain_joingraph)
;; (modes native byte)
;; (modules domain_joingraph)
;; (libraries util qcheck)
;; (preprocess (pps ppx_deriving.show)))
;;
;;(rule
;; (alias runtest)
;; (deps domain_joingraph.exe)
;; (action (run ./%{deps} --no-colors --verbose)))
;;
;;(executable
;; (name domain_spawntree)
;; (modes native byte)
;; (modules domain_spawntree)
;; (libraries util qcheck)
;; (preprocess (pps ppx_deriving.show)))
;;
;;(rule
;; (alias runtest)
;; (deps domain_spawntree.exe)
;; (action (run ./%{deps} --no-colors --verbose)))
;;
;;(executable
;; (name task_one_dep)
;; (modes native byte)
;; (modules task_one_dep)
;; (libraries util qcheck domainslib)
;; (preprocess (pps ppx_deriving.show)))
;;
;;(rule
;; (alias runtest)
;; (deps task_one_dep.exe)
;; (action (run ./%{deps} --no-colors --verbose)))
;;
;;(executable
;; (name task_more_deps)
;; (modes native byte)
;; (modules task_more_deps)
;; (libraries util qcheck domainslib)
;; (preprocess (pps ppx_deriving.show)))
;;
;;(rule
;; (alias runtest)
;; (deps task_more_deps.exe)
;; (action (run ./%{deps} --no-colors --verbose)))
;;
;;(executable
;; (name task_parallel)
;; (modes native byte)
;; (modules task_parallel)
;; (libraries util qcheck domainslib))
;;
;;(rule
;; (alias runtest)
;; (deps task_parallel.exe)
;; (action (run ./%{deps} --no-colors --verbose)))
;;
;;
;;;; Test of the lockfree library
;;
;;(executable
;; (name lf_list_test)
;; (modules lf_list_test)
;; (libraries util qcheck STM lockfree)
;; (preprocess (pps ppx_deriving.show)))
;;
;;(rule
;; (alias runtest)
;; (deps lf_list_test.exe check_error_count.exe)
;; (action
;;   (progn
;;    (with-accepted-exit-codes 1
;;      (with-stdout-to "lfl-output.txt" (run ./lf_list_test.exe --no-colors --verbose)))
;;    (cat lfl-output.txt)
;;    (run ./check_error_count.exe "lf_list_test" 0 lfl-output.txt))))


;; Collective Linearizability tests, utilizing ppx_deriving_qcheck

(executable
 (name lin_tests)
 (modules lin_tests)
 (flags (:standard -w -27 -g))
;; (libraries util qcheck lin CList lockfree)
 (libraries util qcheck lin)
;; (preprocess (pps ppx_deriving_qcheck ppx_deriving.show))
 (modes byte exe)
)

;;(rule
;; (alias runtest)
;; (deps lin_tests.exe check_error_count.exe)
;; (action
;;   (progn
;;    (with-accepted-exit-codes 1
;;      (with-stdout-to "lin-output.txt" (run ./lin_tests.exe --no-colors --verbose)))
;;    (cat lin-output.txt)
;;    (run ./check_error_count.exe "lin_tests" 6 lin-output.txt))))
